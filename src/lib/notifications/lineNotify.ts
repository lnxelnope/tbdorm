import { Bill, LineNotifyConfig } from "@/types/dormitory";

const sendNotification = async (accessToken: string, message: string) => {
  try {
    const response = await fetch("/api/line-notify/send", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ accessToken, message }),
    });

    const data = await response.json();
    return data.success;
  } catch (error) {
    console.error("Error sending notification:", error);
    return false;
  }
};

export const sendBillCreatedNotification = async (
  config: LineNotifyConfig,
  bill: Bill
) => {
  if (!config.isActive || !config.notificationSettings.billCreated) return;

  const message = `\n‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÉ‡∏´‡∏°‡πà üßæ\n‡∏´‡πâ‡∏≠‡∏á: ${bill.roomId}\n‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: ${
    new Date(bill.year, bill.month - 1).toLocaleString("th-TH", {
      month: "long",
      year: "numeric",
    })
  }\n‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ‡∏ø${bill.totalAmount.toLocaleString()}\n‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞: ${new Date(
    bill.dueDate
  ).toLocaleDateString("th-TH")}`;

  return sendNotification(config.accessToken, message);
};

export const sendBillDueReminderNotification = async (
  config: LineNotifyConfig,
  bill: Bill
) => {
  if (!config.isActive || !config.notificationSettings.billDueReminder) return;

  const message = `\n‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‚ö†Ô∏è\n‡∏´‡πâ‡∏≠‡∏á: ${
    bill.roomId
  }\n‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: ${new Date(bill.year, bill.month - 1).toLocaleString("th-TH", {
    month: "long",
    year: "numeric",
  })}\n‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞: ‡∏ø${bill.remainingAmount.toLocaleString()}\n‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞: ${new Date(
    bill.dueDate
  ).toLocaleDateString("th-TH")}`;

  return sendNotification(config.accessToken, message);
};

export const sendBillOverdueNotification = async (
  config: LineNotifyConfig,
  bill: Bill
) => {
  if (!config.isActive || !config.notificationSettings.billOverdue) return;

  const message = `\n‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞ ‚ùå\n‡∏´‡πâ‡∏≠‡∏á: ${
    bill.roomId
  }\n‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: ${new Date(bill.year, bill.month - 1).toLocaleString("th-TH", {
    month: "long",
    year: "numeric",
  })}\n‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞: ‡∏ø${bill.remainingAmount.toLocaleString()}\n‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞: ${new Date(
    bill.dueDate
  ).toLocaleDateString("th-TH")}`;

  return sendNotification(config.accessToken, message);
};

export const sendPaymentReceivedNotification = async (
  config: LineNotifyConfig,
  bill: Bill,
  amount: number
) => {
  if (!config.isActive || !config.notificationSettings.paymentReceived) return;

  const message = `\n‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‚úÖ\n‡∏´‡πâ‡∏≠‡∏á: ${
    bill.roomId
  }\n‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: ${new Date(bill.year, bill.month - 1).toLocaleString("th-TH", {
    month: "long",
    year: "numeric",
  })}\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏ø${amount.toLocaleString()}\n‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ‡∏ø${bill.remainingAmount.toLocaleString()}`;

  return sendNotification(config.accessToken, message);
};

export const sendUtilityReadingNotification = async (
  config: LineNotifyConfig,
  roomId: string,
  type: "water" | "electric",
  previousReading: number,
  currentReading: number,
  units: number
) => {
  if (!config.isActive || !config.notificationSettings.utilityReading) return;

  const message = `\n‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå üìä\n‡∏´‡πâ‡∏≠‡∏á: ${roomId}\n‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${
    type === "water" ? "‡∏ô‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏õ‡∏≤" : "‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"
  }\n‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡πà‡∏≤: ${previousReading}\n‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà: ${currentReading}\n‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${units} ‡∏´‡∏ô‡πà‡∏ß‡∏¢`;

  return sendNotification(config.accessToken, message);
}; 